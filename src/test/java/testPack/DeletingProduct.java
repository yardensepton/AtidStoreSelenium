package testPack;

// Generated by Selenium IDE

import Pages.CartPage;
import Pages.StorePage;
import org.junit.Test;
import org.junit.internal.TextListener;
import org.junit.runner.JUnitCore;
import org.junit.Before;
import org.junit.After;

import static org.junit.Assert.*;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;

import org.openqa.selenium.support.ui.ExpectedConditions;

import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;


import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


import java.time.Duration;

import org.apache.logging.log4j.*;

public class DeletingProduct {

    private WebDriver driver;
    private Logger logger;
    private String baseUrl = "https://atid.store/";
    JavascriptExecutor js;

    @Before
    public void setUp() {

        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        logger = LogManager.getLogger(DeletingProduct.class);
    }

    @After
    public void tearDown() {
        // driver.quit();
    }

    @Test
    public void runTest() throws InterruptedException {
        // Open the Atid Store website
        driver.get("https://atid.store/store/");
        driver.manage().window().setSize(new Dimension(1024, 670));
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

        logger.info("---------------------DELETE PRODUCT TEST---------------------");
        // Log information about opening the first store page
        logger.info("Opening the first store page - GOOD");
        WebElement productRemoved;
        String cart = "cart-2/";


        StorePage storePage = new StorePage(driver);
        CartPage cartPage = new CartPage(driver);
        Map<String,String> productDetailsMap = storePage.getProductsInHashMap(3);
        for (Map.Entry<String, String> entry : productDetailsMap.entrySet()) {
            String productLink = entry.getKey();

            storePage.goToLink(productLink);
            storePage.clickAddToCart();

            logger.info("Product " + extractProductName(productLink) + " was added  to cart");
            // Checking if the product is added successfully
            assertTrue(storePage.alertAddedToCartPresent());
        }
        logger.info("-----------------------------------------------------------------");

        // Deleting the product from the cart

        cartPage.goToCartPage();


        cartPage.getQuantityField().get(0).clear();
        cartPage.getQuantityField().get(0).sendKeys("0");
        cartPage.getQuantityField().get(0).sendKeys(" ");
        cartPage.getUpdateCart().click();
        productRemoved = wait.until(ExpectedConditions.visibilityOfElementLocated(cartPage.productRemoved()));
        assertTrue(productRemoved.isDisplayed());
        logger.info("Product deleted successfully from the cart - insert empty string to quantity.");


        cartPage.clickRemove();
        Thread.sleep(2000); // Wait for the product to be removed from the cart
        productRemoved = wait.until(ExpectedConditions.visibilityOfElementLocated(cartPage.productRemoved()));
        assertTrue(productRemoved.isDisplayed());
        logger.info("Product deleted successfully from the cart - press x.");
        // Verifying if the product is successfully deleted

       cartPage.goToCartPage();


        cartPage.getQuantityField().get(0).clear();
        cartPage.getQuantityField().get(0).sendKeys("0");
        cartPage.getUpdateCart().click();

        // Wait for the product removed message to appear
        productRemoved = wait.until(ExpectedConditions.visibilityOfElementLocated(cartPage.productRemoved()));
        assertTrue(productRemoved.isDisplayed());
        logger.info("Product deleted successfully from the cart - insert 0 to quantity.");


        Thread.sleep(1000);


        logger.info("Test completed successfully.");


    }

    public static String extractProductName(String url) {
        return url.replaceAll(".*/product/(.*?)/.*", "$1");
    }

    private static String extractNumber(String input) {
        // Define a regular expression pattern for extracting numbers with commas and
        // periods
        String regex = "(\\d{1,3}(,\\d{3})*(\\.\\d+)?)|\\d+";

        // Use a regular expression to match the pattern
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(input);

        // Find the first match
        if (matcher.find()) {
            return matcher.group().replace(",", ""); // Remove commas
        }

        // If no match is found, return an empty string
        return "";
    }

    public static void main(String args[]) {
        JUnitCore junit = new JUnitCore();
        junit.addListener(new TextListener(System.out));
        org.junit.runner.Result result = junit.run(DeletingProduct.class);

        if (result.getFailureCount() > 0) {
            System.out.println("Test failed.");
            System.exit(1);
        } else {
            System.out.println("Test finished successfully.");
            System.exit(0);
        }
    }
}
